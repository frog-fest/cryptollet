
trigger:
- master

pool:
  vmImage: 'macos-latest'

variables:
  buildConfiguration: 'Release'
  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'
  solutionName: 'Cryptollet.sln'
  androidProject: 'Cryptollet.Android/Cryptollet.Android.csproj'

jobs:
- job: BuildAndroid
  displayName: "Build Android App"

  steps:
      - task: NuGetToolInstaller@1
      - task: NuGetCommand@2
        inputs:
          restoreSolution: '**/*.sln'
      - task: XamarinAndroid@1
        inputs:
          projectFile: '$(androidProject)'
          outputDirectory: '$(outputDirectory)'
          configuration: '$(buildConfiguration)'
      - task: AndroidSigning@3
        inputs:
          apkFiles: '**/*.apk'
          apksignerKeystoreFile: 'ms.keystore'
          apksignerKeystorePassword: '$(keystorePassword)'
          apksignerKeystoreAlias: '$(keystoreName)'
          apksignerKeyPassword: '$(keystorePassword)'
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: 'Cryptollet.Android/obj/Release/100/android/bin/com.kristijankralj.cryptollet.apk'
          artifactName: AndroidApk
- job: BuildiOS
  displayName: "Build iOS App"
  
  steps:
  - task: NuGetToolInstaller@1
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solutionName)'
  - task: XamariniOS@2
    inputs:
      solutionFile: '$(solutionName)'
      configuration: Debug
      packageApp: false
      buildForSimulator: true
      runNugetRestore: false

- job: RunTests
  displayName: "Run unit tests"
  steps:
  - task: DotNetCoreCLI@2
    inputs:
      command: 'test'
      projects: 'Cryptollet.Tests/Cryptollet.Tests.csproj'
      configuration: '$(buildConfiguration)'